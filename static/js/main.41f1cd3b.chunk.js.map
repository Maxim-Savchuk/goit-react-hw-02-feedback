{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/Feedback.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Section","title","children","className","s","Container","Title","FeedbackOptions","options","onLeaveFeedback","map","option","index","type","name","Button","onClick","Notification","message","Text","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleFeedback","event","value","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,MAAQ,0BAA0B,KAAO,2B,kBCArGD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,gBCAjED,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,2B,oBCAnED,EAAOC,QAAU,CAAC,KAAO,6B,qKCEZC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7B,OACI,sBAAKC,UAAWC,IAAEC,UAAlB,UACI,oBAAIF,UAAWC,IAAEE,MAAjB,SAAyBL,IACxBC,M,gBCJAK,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACvC,OACI,qBAAKN,UAAWC,IAAEC,UAAlB,SACKG,EAAQE,KAAI,SAACC,EAAQC,GAClB,OACI,wBACIC,KAAK,SAELC,KAAMH,EACNR,UAAWC,IAAEW,OACbC,QAASP,EALb,SAOKE,GALIC,S,iBCPhBK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OAAO,mBAAGf,UAAWC,IAAEe,KAAhB,SAAuBD,K,gBCArBE,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACpD,OACI,sBAAKtB,UAAWC,IAAEC,UAAlB,UACI,oBAAIF,UAAWC,IAAEE,MAAjB,wBACCkB,EAEO,gCACI,oBAAGrB,UAAWC,IAAEe,KAAhB,mBAA4B,+BAAOE,OACnC,oBAAGlB,UAAWC,IAAEe,KAAhB,sBAA+B,+BAAOG,OACtC,oBAAGnB,UAAWC,IAAEe,KAAhB,kBAA2B,+BAAOI,OAClC,oBAAGpB,UAAWC,IAAEe,KAAhB,oBAA6B,+BAAOK,OACpC,oBAAGrB,UAAWC,IAAEe,KAAhB,gCAAyC,+BAAOM,UAGpD,cAAC,EAAD,CAAcP,QAAQ,0BCb7BQ,EAAb,4MACEC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEK,eAAiB,SAAAC,GACf,IAAMC,EAAQD,EAAME,OAAOjB,KAE3B,EAAKkB,UAAS,SAAAC,GAAS,sBACpBH,EAAQG,EAAUH,GAAS,OAXlC,EAeEI,mBAAqB,WACnB,MAA+B,EAAKP,MACpC,OADA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,KAhB3B,EAoBEY,gCAAkC,WAChC,IAAQd,EAAS,EAAKM,MAAdN,KACR,MAAM,GAAN,QAAYA,EAAO,EAAKa,qBAAwB,KAAKE,QAAQ,GAA7D,MAtBJ,4CAyBE,WACE,MAA+BC,KAAKV,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAAC,EAAD,CAAStB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEO,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB4B,KAAKT,iBAExB,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,KAAKH,qBACZT,mBAAoBY,KAAKF,2CAvCnC,GAAyBG,aCAzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41f1cd3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Statistics_Container__1JLFH\",\"Title\":\"Statistics_Title__2gFmp\",\"Text\":\"Statistics_Text__okISa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Section_Container__TDhWK\",\"Title\":\"Section_Title__160Uq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Feedback_Container__3nGF4\",\"Button\":\"Feedback_Button__1C6CU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"Notification_Text__2SVF5\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport const Section = ({ title, children }) => {\r\n    return (\r\n        <div className={s.Container}>\r\n            <h1 className={s.Title}>{title}</h1>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node,\r\n}","import PropTypes from 'prop-types';\r\nimport s from './Feedback.module.css';\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <div className={s.Container}>\r\n            {options.map((option, index) => {\r\n                return (\r\n                    <button\r\n                        type=\"button\"\r\n                        key={index}\r\n                        name={option}\r\n                        className={s.Button}\r\n                        onClick={onLeaveFeedback}\r\n                    >\r\n                        {option}\r\n                    </button>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nexport const Notification = ({ message }) => {\r\n    return <p className={s.Text}>{message}</p>\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport { Notification } from 'components/Notification/Notification';\r\nimport s from './Statistics.module.css';\r\n\r\nexport const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <div className={s.Container}>\r\n            <h2 className={s.Title}>Statistics</h2>\r\n            {total ?\r\n                (\r\n                    <div>\r\n                        <p className={s.Text}>Good: <span>{good}</span></p>\r\n                        <p className={s.Text}>Neutral: <span>{neutral}</span></p>\r\n                        <p className={s.Text}>Bad: <span>{bad}</span></p>\r\n                        <p className={s.Text}>Total: <span>{total}</span></p>\r\n                        <p className={s.Text}>Positive feedback: <span>{positivePercentage}</span></p>\r\n                    </div>\r\n                ) : (\r\n                    <Notification message=\"No feedback given\" />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.string,\r\n}","import { Component } from 'react';\nimport { Section } from 'components/Section/Section';\nimport { FeedbackOptions } from 'components/FeedbackOptions/FeedbackOptions';\nimport { Statistics } from 'components/Statistics/Statistics';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  handleFeedback = event => {\n    const value = event.target.name;\n\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }))\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return `${((good / this.countTotalFeedback()) * 100).toFixed(0)}%`;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          onLeaveFeedback={this.handleFeedback}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport { App } from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}