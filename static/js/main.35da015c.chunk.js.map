{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js"],"names":["Container","styled","div","Title","h1","Section","title","children","Button","button","FeedbackOptions","options","onLeaveFeedback","map","option","index","type","name","onClick","Text","p","Notification","message","h2","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleFeedback","event","value","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAEaA,EAAYC,IAAOC,IAAV,mGAOTC,EAAQF,IAAOG,GAAV,gD,OCNLC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7B,OACI,eAACP,EAAD,WACI,cAACG,EAAD,UAAQG,IACPC,MCLAP,EAAYC,IAAOC,IAAV,yFAMTM,EAASP,IAAOQ,OAAV,saCLNC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACvC,OACI,cAAC,EAAD,UACKD,EAAQE,KAAI,SAACC,EAAQC,GAClB,OACI,cAACP,EAAD,CACIQ,KAAK,SAELC,KAAMH,EACNI,QAASN,EAJb,SAMKE,GAJIC,SCRhBI,EAAOlB,IAAOmB,EAAV,qECCJC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OAAO,cAACH,EAAD,UAAOG,KCFLtB,EAAYC,IAAOC,IAAV,iDAITC,EAAQF,IAAOsB,GAAV,wEAKLJ,EAAOlB,IAAOmB,EAAV,wGCPJI,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACpD,OACI,eAAC,EAAD,WACI,cAAC,EAAD,yBACCD,EAEO,gCACI,eAAC,EAAD,oBAAY,+BAAOH,OACnB,eAAC,EAAD,uBAAe,+BAAOC,OACtB,eAAC,EAAD,mBAAW,+BAAOC,OAClB,eAAC,EAAD,qBAAa,+BAAOC,OACpB,eAAC,EAAD,iCAAyB,+BAAOC,UAGpC,cAAC,EAAD,CAAcP,QAAQ,0BCb7BQ,EAAb,4MACEC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEK,eAAiB,SAAAC,GACf,IAAMC,EAAQD,EAAME,OAAOlB,KAE3B,EAAKmB,UAAS,SAAAC,GAAS,sBACpBH,EAAQG,EAAUH,GAAS,OAXlC,EAeEI,mBAAqB,WACnB,MAA+B,EAAKP,MACpC,OADA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,KAhB3B,EAoBEY,gCAAkC,WAChC,IAAQd,EAAS,EAAKM,MAAdN,KACR,MAAM,GAAN,QAAYA,EAAO,EAAKa,qBAAwB,KAAKE,QAAQ,GAA7D,MAtBJ,4CAyBE,WACE,MAA+BC,KAAKV,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAAC,EAAD,CAASrB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB6B,KAAKT,iBAExB,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,KAAKH,qBACZT,mBAAoBY,KAAKF,2CAvCnC,GAAyBG,aCAzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35da015c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px;\r\n  width: 800px;\r\n  height: auto;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 28px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Container, Title } from './Section.styled';\r\n\r\nexport const Section = ({ title, children }) => {\r\n    return (\r\n        <Container>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </Container>\r\n    );\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 40px;\r\n  margin-left: 20px;\r\n  display: flex;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 18px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  text-transform: capitalize;\r\n  font-weight: 600;\r\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 4px rgba(0, 0, 0, 0.16), 0px 1px 1px rgba(0, 0, 0, 0.12);\r\n  &:not(:last-child) {\r\n    margin-right: 15px;\r\n  }\r\n`;","import PropTypes from 'prop-types';\r\nimport { Container, Button } from './FeedbackOptions.styled';\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <Container>\r\n            {options.map((option, index) => {\r\n                return (\r\n                    <Button\r\n                        type=\"button\"\r\n                        key={index}\r\n                        name={option}\r\n                        onClick={onLeaveFeedback}\r\n                    >\r\n                        {option}\r\n                    </Button>\r\n                )\r\n            })}\r\n        </Container>\r\n    );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n`;","import PropTypes from 'prop-types';\r\nimport { Text } from './Notification.styled';\r\n\r\nexport const Notification = ({ message }) => {\r\n    return <Text>{message}</Text>\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 28px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-weight: 500;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Notification } from 'components/Notification';\r\nimport { Container, Title, Text } from './Statistics.styled';\r\n\r\nexport const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <Container>\r\n            <Title>Statistics</Title>\r\n            {total ?\r\n                (\r\n                    <div>\r\n                        <Text>Good: <span>{good}</span></Text>\r\n                        <Text>Neutral: <span>{neutral}</span></Text>\r\n                        <Text>Bad: <span>{bad}</span></Text>\r\n                        <Text>Total: <span>{total}</span></Text>\r\n                        <Text>Positive feedback: <span>{positivePercentage}</span></Text>\r\n                    </div>\r\n                ) : (\r\n                    <Notification message=\"No feedback given\" />\r\n                )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.string,\r\n}","import { Component } from 'react';\nimport { Section } from 'components/Section';\nimport { FeedbackOptions } from 'components/FeedbackOptions';\nimport { Statistics } from 'components/Statistics';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  handleFeedback = event => {\n    const value = event.target.name;\n\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }))\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return `${((good / this.countTotalFeedback()) * 100).toFixed(0)}%`;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          onLeaveFeedback={this.handleFeedback}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport { App } from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}